---
title: "R and databases"
subtitle: "calidad"
author: 
date: '`r Sys.Date()`'
output:
  xaringan::moon_reader:
    seal: false
    #lib_dir: libs
    css: xaringan-themer.css
    nature:
      highlightStyle: github
      highlightLines: true
      countIncrementalSlides: False
      ratio: '13:9'
---

class: center, middle

.linea-superior[]
.linea-inferior[]

<img src="imagenes/logo_portada2.png" width="200" />

## INE Educa: Clases abiertas de R

## Visualización con ggplot II

## Proyecto Ciencia de Datos


```{r setup, include=FALSE}
options(htmltools.dir.version = TRUE)
knitr::opts_chunk$set(message = FALSE, warning = F, eval = T, fig.align = "center") 
options(scipen = "999")
```

```{r xaringan-themer, include=FALSE, warning=FALSE}
library(xaringanthemer)
xaringanExtra::use_panelset()
```


---


background-image: url("imagenes/fondo2.PNG")
background-size: contain;
background-position: 100% 0%

# Segundo dataset

Trabajaremos con un dataset llamado gapminder

Contiene datos de PIB y esperanza de vida por país y quinquenio

```{r, eval=FALSE}
install.packages("gapminder")
```

```{r}
library(gapminder)
life <-  gapminder
head(life, 10)
```

---
background-image: url("imagenes/fondo2.PNG")
background-size: contain;
background-position: 100% 0%

# Segundo dataset

### Relación entre ingreso y esperanza de vida

```{r, fig.width=7, fig.height=4}
library(tidyverse)

life_gdp <-  gapminder %>% 
  filter(year == 2007)

ggplot(life_gdp, aes(x = lifeExp, y = log(gdpPercap)) ) + 
  geom_point()
```


Aplicamos una transformación logarítmica sobre el PIB para obtener una mejor visualización


---
background-image: url("imagenes/fondo2.PNG")
background-size: contain;
background-position: 100% 0%

# Parámetros extra dentro de aes

.panelset[
.panel[.panel-name[color]
```{r color, fig.width=8, fig.height=5}
ggplot(life_gdp, aes(x = lifeExp, y = log(gdpPercap), color = continent) ) +  #<<
  geom_point()
```
]

.panel[.panel-name[size]
```{r size,  fig.width=8, fig.height=5}
ggplot(life_gdp, aes(x = lifeExp, y = log(gdpPercap), color = continent, size = pop) ) + #<<
  geom_point() +
  scale_size(range = c(1, 7)) #<<
```
]
]


---
background-image: url("imagenes/fondo2.PNG")
background-size: contain;
background-position: 100% 0%

# Problema: los puntos se superponen
    
* Tenemos, al menos, dos soluciones:
  + Transparencia
  + Jitter

.panelset[
.panel[.panel-name[transparencia]

```{r, fig.width=7, fig.height=4 }
ggplot(life_gdp, aes(x = lifeExp, y = log(gdpPercap), color = continent, size = pop) ) + 
  geom_point(alpha = 0.6) +
  scale_size(range = c(1, 5))
```
]

.panel[.panel-name[jitter]
```{r, fig.width=7, fig.height=4}
ggplot(life_gdp, aes(x = lifeExp, y = log(gdpPercap), color = continent, size = pop) ) + 
  geom_point() +
  geom_jitter(width = 0.5) +
  scale_size()
```
]
]

---
background-image: url("imagenes/fondo2.PNG")
background-size: contain;
background-position: 100% 0%

# Paneles separados

Con `facet_wrap` generamos un panel para cada categoría de la variable

```{r, fig.width=7, fig.height=4}
ggplot(life_gdp, aes(x = lifeExp, y = log(gdpPercap), color = continent, size = pop) ) + 
  geom_point() +
  scale_size(range = c(1, 5)) +
  facet_wrap(~continent) #<<
```

---
background-image: url("imagenes/fondo2.PNG")
background-size: contain;
background-position: 100% 0%

# Resumen

* Figuras revisadas en la clase
  + `geom_bar`
  + `geom_point`
  + `geom_line`
  + `geom_vline`
  + `geom_hline`

* Más figuras
  + `geom_text`
  + `geom_segment`
  + `geom_boxplot`
  + `geom_polygon`
  + `geom_density`

--

**Memorizar las funciones es una mala estrategia para mejorar en `ggplot`**

--

* Debemos preocuparnos de 2 cosas:
  + Entender la sintaxis de ggplot
  + Aprender a buscar rápidamente en internet lo que necesitamos


---

class: center, middle

.linea-superior[]
.linea-inferior[]

<img src="imagenes/logo_portada2.png" width="200" />


## INE Educa: Clases abiertas de R

## Proyecto Ciencia de Datos

## Visualización con ggplot II
